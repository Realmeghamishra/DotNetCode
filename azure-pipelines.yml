trigger:
- none
 
pool:
  vmImage: 'windows-latest'
 
variables:
  solution: '**/RoundTheCode.AzureTestProject.sln'  # Path to your solution file
  buildConfiguration: 'Release'  # Build configuration, e.g., Debug or Release
  outputPath: '$(Build.ArtifactStagingDirectory)/publish'  # Output directory for publish artifacts
  project: '**/RoundTheCode.AzureTestProject.csproj'

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'
    publishTestResults: true
  
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration) --output $(outputPath)'
    publishWebProjects: true  # Change to true if your project is a web application
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(outputPath)'
    artifactName: 'published'

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'published'
    downloadPath: '$(outputPath)/downloaded'
    extractTars: false
  
      

# - task: DownloadBuildArtifacts@0
#   displayName: 'Download Published Artifact'
#   inputs:
#     buildType: 'current'
#     artifactName: 'published'
#     downloadPath: '$(Pipeline.Workspace)/DownloadedArtifact'
