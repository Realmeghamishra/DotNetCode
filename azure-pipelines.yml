trigger:
- none
 
pool:
  vmImage: 'windows-latest'
 
variables:
  solution: '**/RoundTheCode.AzureTestProject.sln'  # Path to your solution file
  buildConfiguration: 'Release'  # Build configuration, e.g., Debug or Release
  outputPath: '$(Build.ArtifactStagingDirectory)/publish'  # Output directory for publish artifacts
  project: '**/RoundTheCode.AzureTestProject.csproj'

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'
    publishTestResults: true
  
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration) --output $(outputPath)'
    publishWebProjects: true  # Change to true if your project is a web application
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(outputPath)'
    artifactName: 'published'

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       # Write your commands here
      
#       echo 'Hello world -current directory'
#       ls
#       echo 'Hello world - Output directory'
#       cd '$(outputPath)'
#       ls

- task: DownloadBuildArtifacts@1
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'published'
    #downloadPath: '$(outputPath)/downloaded'
    extractTars: false
    downloadPath: '$(Pipeline.Workspace)/downloaded-artifact'
    
# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       # Write your commands here
      
#       echo 'Hello world -current directory 2'
#       ls
#       echo 'Hello world - Output directory 2'
#       cd '$(outputPath)'
#       ls
#       echo 'Hello world - Pipeline.Workspace'
#       cd '$(Pipeline.Workspace)'
#       ls
#       echo 'Contents of downloaded-artifact:'
#       cd downloaded-artifact
#       ls
#       echo 'Contents of published:'
#       cd published
#       ls


- task: Docker@2
  inputs:
    containerRegistry: 'acr-svc-conn'
    repository: 'dotnet-app'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    buildContext: '$(Pipeline.Workspace)/downloaded-artifact'
    tags: |
      $(Build.BuildId)
      latest

# - script: |
#           git config --global user.name "Azure DevOps"
#           git config --global user.email "mishramegha0403@gamil.com"
#           cd $(Pipeline.Workspace)/downloaded-artifact
#           git init
#           git add .
#           git commit -m "Initial commit"
#           git remote add origin https://github.com/Realmeghamishra/DotNetCode.git
#           git push -u origin main

# - task: Bash@3
#   displayName: 'Substitute Variable in Dockerfile'
#   inputs:
#       targetType: 'inline'
#       script: |
#         echo "Substituting parameters in Dockerfile"
#         sed -i "s|__PUBLISHED_CODE__|$(outputPath)|g" Dockerfile

# - task: Docker@2
#   inputs:
#     containerRegistry: 'acr-svc-conn'
#     repository: 'dotnet-app'
#     command: 'buildAndPush'
#     Dockerfile: 'Dockerfile'
#     tags: |
#       $(Build.BuildId)
#       Latest

    